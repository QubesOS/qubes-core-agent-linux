# Maintainer: Frédéric Pierret (fepitre) <frederic@invisiblethingslab.com>

pkgname=(qubes-vm-core qubes-vm-networking qubes-vm-keyring qubes-vm-caja qubes-vm-nautilus qubes-vm-passwordless-root qubes-vm-thunar qubes-vm-dom0-updates)
pkgver=@VERSION@
pkgrel=@REL@
pkgdesc="The Qubes core files for installation inside a Qubes VM."
arch=("x86_64")
url="https://qubes-os.org/"
license=('GPL-2.0-or-later')
makedepends=(
    gcc
    make

    desktop-file-utils
    libx11
    lsb-release
    pandoc
    pkg-config
    python
    python-setuptools
    shared-mime-info
    qubes-db-vm
    qubes-libvchan
    qubes-vm-utils
    qubes-vm-xen
)
_pkgnvr="${pkgname}-${pkgver}-${pkgrel}"
source=("${_pkgnvr}.tar.gz")
sha256sums=(SKIP)

build() {
    cd "${_pkgnvr}"

    # Fix for network tools paths
    sed 's:/sbin/ip:ip:g' -i network/*
    sed 's:/bin/grep:grep:g' -i network/*

    # Fix for archlinux sbindir
    sed 's:/usr/sbin/ntpdate:/usr/bin/ntpdate:g' -i qubes-rpc/sync-ntp-clock

    for dir in qubes-rpc misc; do
        make -C "$dir" VERSION=${pkgver}
    done
}

#This package provides:
# * qubes rpc scripts
# * core linux tools and scripts
# * core systemd services and drop-ins
# * basic network functionality (setting IP address, DNS, default gateway)
package_qubes-vm-core() {
    local release
    [[ "$pkgver" =~ ^([0-9]+)\.([0-9]+)($|\.) ]] || {
        echo 'invalid $pkgver'>&2
        exit 1
    }
    provides=(qubes-core-agent=@VERSION@)
    conflicts=('pulseaudio-qubes<4.2.0')
    release=${BASH_REMATCH[1]}.${BASH_REMATCH[2]}
    depends=(
        dconf
        fakeroot
        gawk
        gnome-packagekit
        graphicsmagick
        haveged
        iproute2
        librsvg
        notification-daemon
        ntp
        pacman-contrib
        parted
        procps-ng
        # Block updating if there is a major python update as the python API will be in the wrong PYTHONPATH
        'python<3.14'
        python-dbus
        python-gobject
        python-xdg
        qubes-db-vm
        qubes-libvchan
        'qubes-vm-qrexec>=4.2.19'
        qubes-vm-utils
        sed
        socat
        xdg-utils
        zenity
    )
    optdepends=(
        gnome-keyring
        gnome-settings-daemon
        gpk-update-viewer
        qubes-vm-caja
        qubes-vm-keyring
        qubes-vm-nautilus
        qubes-vm-networking
        qubes-vm-thunar
    )
    install="archlinux/PKGBUILD.install"

    cd "${_pkgnvr}"

    # shellcheck disable=SC2154
    make -C boot DESTDIR="$pkgdir" install
    make install-corevm DESTDIR="$pkgdir" SBINDIR=/usr/bin LIBDIR=/usr/lib SYSLIBDIR=/usr/lib SYSTEM_DROPIN_DIR=/usr/lib/systemd/system USER_DROPIN_DIR=/usr/lib/systemd/user DIST=archlinux
    make -C app-menu install DESTDIR="$pkgdir" install LIBDIR=/usr/lib SYSLIBDIR=/usr/lib
    make -C misc install DESTDIR="$pkgdir" install LIBDIR=/usr/lib SYSLIBDIR=/usr/lib
    make -C qubes-rpc DESTDIR="$pkgdir" install
    make -C qubes-rpc/kde DESTDIR="$pkgdir" install
    make -C filesystem DESTDIR="$pkgdir" install

    # Adjust fstab for Arch
    mv "$pkgdir/etc/fstab" "$pkgdir/etc/fstab.qubes"
    echo "
# This MUST be a ramfs, not a tmpfs!  The data here is incredibly sensitive
# (allows root access) and must not be leaked to disk.
tmpfs                   /etc/pacman.d/gnupg/private-keys-v1.d       ramfs   defaults,noexec,nosuid,nodev,mode=600    0 0" >> "$pkgdir/etc/fstab.qubes"

    # Install systemd script allowing to automount /lib/modules
    install -m 644 "archlinux/PKGBUILD.qubes-ensure-lib-modules.service" "${pkgdir}/usr/lib/systemd/system/qubes-ensure-lib-modules.service"

    # Install pacman hook to update desktop icons
    mkdir -p "${pkgdir}/usr/share/libalpm/hooks/"
    install -m 644 "archlinux/PKGBUILD.qubes-update-desktop-icons.hook" "${pkgdir}/usr/share/libalpm/hooks/qubes-update-desktop-icons.hook"

    # Install pacman hook to notify dom0 about successful upgrade
    install -m 644 "archlinux/PKGBUILD.qubes-post-upgrade.hook" "${pkgdir}/usr/share/libalpm/hooks/qubes-post-upgrade.hook"

    # Install pacman.d drop-ins (at least 1 drop-in must be installed or pacman will fail)
    mkdir -p -m 0755 "${pkgdir}/etc/pacman.d"
    install -m 644 "archlinux/PKGBUILD-qubes-pacman-options.conf" "${pkgdir}/etc/pacman.d/10-qubes-options.conf"

    # Install upgrade check scripts
    install -m 0755 "package-managers/upgrades-installed-check" "${pkgdir}/usr/lib/qubes/"
    install -m 0755 "package-managers/upgrades-status-notify" "${pkgdir}/usr/lib/qubes/"

    # Patch for /etc/sudoers default secure_path
    install -d -m 0750 "${pkgdir}/etc/sudoers.d"
    install -m 0440 "archlinux/PKGBUILD.qubes-secure-path.sudo" "${pkgdir}/etc/sudoers.d/qubes_secure_path"

    # Archlinux specific: enable autologin on tty1
    mkdir -p "$pkgdir/etc/systemd/system/getty@tty1.service.d/"
    cat <<EOF > "$pkgdir/etc/systemd/system/getty@tty1.service.d/autologin.conf"
[Service]
ExecStart=
ExecStart=-/sbin/agetty -o '-f -p -- \\u' --keep-baud 115200,38400,9600 %I linux
EOF

    # Archlinux packaging guidelines: /var/run is a symlink to a tmpfs. Don't create it
    rm -rf "$pkgdir/var/run"
}

#This package provides:
# * proxy service used by TemplateVMs to download updates
# * qubes-firewall service (FirewallVM)
#
#Integration of NetworkManager for Qubes VM:
# * make connections config persistent
# * adjust DNS redirections when needed
# * show/hide NetworkManager applet icon
#
package_qubes-vm-networking() {
    pkgdesc="Qubes OS tools allowing to use a Qubes VM as a NetVM/ProxyVM"
    provides=(qubes-core-agent-networking=@VERSION@)
    depends=(
        conntrack-tools
        iproute2
        networkmanager
        network-manager-applet
        nftables
        python
        qubes-db-vm
        qubes-vm-core
        qubes-vm-utils
        tinyproxy
    )
    install="archlinux/PKGBUILD-networking.install"

    cd "${_pkgnvr}"
    # shellcheck disable=SC2154
    make -C network install \
        DESTDIR="$pkgdir" \
        SBINDIR=/usr/bin \
        LIBDIR=/usr/lib \
        SYSLIBDIR=/usr/lib \
        SYSTEM_DROPIN_DIR=/usr/lib/systemd/system \
        USER_DROPIN_DIR=/usr/lib/systemd/user \
        DIST=archlinux
    make install-netvm \
        DESTDIR="$pkgdir" \
        SBINDIR=/usr/bin \
        LIBDIR=/usr/lib \
        SYSLIBDIR=/usr/lib \
        SYSTEM_DROPIN_DIR=/usr/lib/systemd/system \
        USER_DROPIN_DIR=/usr/lib/systemd/user \
        DIST=archlinux
}

package_qubes-vm-keyring() {
    pkgdesc="Qubes OS Binary Repository Activation package and Keyring"
    install="archlinux/PKGBUILD-keyring.install"

    cd "${_pkgnvr}"
    # Install keyring (will be activated through the .install file)
    install -dm755 "${pkgdir}/usr/share/pacman/keyrings/"
    install -m0644 "archlinux/PKGBUILD-keyring-keys" "${pkgdir}/usr/share/pacman/keyrings/qubesos-vm.gpg"
    install -m0644 "archlinux/PKGBUILD-keyring-trusted" "${pkgdir}/usr/share/pacman/keyrings/qubesos-vm-trusted"
    install -m0644 "archlinux/PKGBUILD-keyring-revoked" "${pkgdir}/usr/share/pacman/keyrings/qubesos-vm-revoked"
}

package_qubes-vm-caja() {
    pkgdesc="Qubes OS Caja addons for inter-VM file copy/move/open"
    provides=(qubes-core-agent-caja=@VERSION@)
    conflicts=('qubes-vm-core<4.3.26')
    depends=(
        bash
        python-caja
        qubes-vm-qrexec
    )

    cd "${_pkgnvr}"
    make -C qubes-rpc/caja install \
        DESTDIR="$pkgdir" \
        SBINDIR=/usr/bin \
        LIBDIR=/usr/lib \
        SYSLIBDIR=/usr/lib \
        SYSTEM_DROPIN_DIR=/usr/lib/systemd/system \
        USER_DROPIN_DIR=/usr/lib/systemd/user \
        DIST=archlinux
}

package_qubes-vm-thunar() {
    pkgdesc="Qubes OS Thunar addons for inter-VM file copy/move/open"
    provides=(qubes-core-agent-thunar=@VERSION@)
    conflicts=('qubes-vm-core<4.3.26')
    depends=(
        bash
        qubes-vm-qrexec
        thunar
    )
    optdepends=(
        qubes-img-converter
        qubes-pdf-converter
    )

    cd "${_pkgnvr}"
    make -C qubes-rpc/thunar install \
        DESTDIR="$pkgdir" \
        SBINDIR=/usr/bin \
        LIBDIR=/usr/lib \
        SYSLIBDIR=/usr/lib \
        SYSTEM_DROPIN_DIR=/usr/lib/systemd/system \
        USER_DROPIN_DIR=/usr/lib/systemd/user \
        DIST=archlinux
}

package_qubes-vm-nautilus() {
    pkgdesc="Qubes OS Nautilus addons for inter-VM file copy/move/open"
    provides=(qubes-core-agent-nautilus=@VERSION@)
    conflicts=('qubes-vm-core<4.3.26')
    depends=(
        bash
        python-gobject
        python-nautilus
        qubes-vm-core
        qubes-vm-qrexec
    )

    cd "${_pkgnvr}"
    make -C qubes-rpc/nautilus install \
        DESTDIR="$pkgdir" \
        SBINDIR=/usr/bin \
        LIBDIR=/usr/lib \
        SYSLIBDIR=/usr/lib \
        SYSTEM_DROPIN_DIR=/usr/lib/systemd/system \
        USER_DROPIN_DIR=/usr/lib/systemd/user \
        DIST=archlinux
}

package_qubes-vm-passwordless-root() {
    pkgdesc="Qubes OS Passwordless root access from normal user"
    provides=(qubes-core-agent-passwordless-root=@VERSION@)

    cd "${_pkgnvr}"
    make -C passwordless-root install \
        DESTDIR="$pkgdir" \
        SBINDIR=/usr/bin \
        LIBDIR=/usr/lib \
        SYSLIBDIR=/usr/lib \
        SYSTEM_DROPIN_DIR=/usr/lib/systemd/system \
        USER_DROPIN_DIR=/usr/lib/systemd/user \
        DIST=archlinux
}

package_qubes-vm-dom0-updates() {
    pkgdesc="Qubes OS tools for fetching dom0 updates"
    provides=(qubes-core-agent-dom0-updates=@VERSION@)
    depends=(
        dnf5
        python
        qubes-vm-core
        qubes-vm-networking
    )

    cd "${_pkgnvr}"
    make -C package-managers install \
        DESTDIR="$pkgdir" \
        SBINDIR=/usr/bin \
        LIBDIR=/usr/lib \
        SYSLIBDIR=/usr/lib \
        SYSTEM_DROPIN_DIR=/usr/lib/systemd/system \
        USER_DROPIN_DIR=/usr/lib/systemd/user \
        DIST=archlinux

    # already included in the main package
    rm -f "${pkgdir}/usr/lib/qubes/upgrades-installed-check"
    rm -f "${pkgdir}/usr/lib/qubes/upgrades-status-notify"
    # not relevant for dom0 updates
    rm -f "${pkgdir}/usr/lib/environment.d/60-gnome-software-fix.conf"
}
